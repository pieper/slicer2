#! /bin/csh

# USAGE: Copy this file to /projects/birn/slicer(at BWH), and then run it.
# It will create a complete installation of the Slicer. 
# You may then tar up the slicer directory and install it
# somewhere else (see the README file).

# NOTES: 
# You must compile Tcl, Tk, and VTK first and set their paths below.
# You should set the MY_SLICER_VERSION variable to specify the new
# directory to create.
# If you are tarring up a tagged release branch from CVS, you need to
# specify the CVS_FLAGS variable.
# You should also set the BWH_INSTALL variable for whether we are
# doing an internal (with MI) or external (up for ftp) install.
# Finally, set the MY_OLD_SLICER variable to point to a previous
# version of the slicer where we will grab executables not in CVS
# (program/loc.txt, program/mi-bin and servers/SignaSP/spl_server) 
#

# --------------------------------------------------------------
#  Edit these variables before running the tarup script
# --------------------------------------------------------------

# Whether this install should contain code only for bwh (MI)
# This is Sandy's code (executable the slicer calls) 
# that we don't distribute outside the SPL/AI Lab.
setenv BWH_INSTALL 1

# Set the directory of an older version of the slicer
# where we will look for the following things:
# program/loc.txt  (this is a demo of locator)
# For BWH only : program/mi-bin and servers/SignaSP/spl_server
setenv MY_OLD_SLICER /local/pkg/slicer-1.0.1

# Set the version number of the slicer directory to create
# (this puts the current date like so: nightly_06_15_01)
setenv MY_SLICER_VERSION `date '+nightly_%m_%d_%y'` 
# setenv MY_SLICER_VERSION 1.3.0

# Set the flags to CVS to checkout a release branch
setenv CVS_FLAGS "-r release-1_2_3-02_25_2002-patches"

# Set these paths to your Tcl and Tk
setenv MY_TCL /local/src/tcl8.3.0
setenv MY_TK /local/src/tk8.3.0

# Set the version number of your Tcl and Tk
setenv MY_VER_NUM 8.3

# Set the path to your VTK
#setenv MY_VTK /projects/slicer/vtk/vtk3.2
#setenv MY_VTK /projects/slicer/vtk/vtk3.2_gcc
#setenv MY_VTK /projects/slicer/vtk/vtk3.2_nov_13
setenv MY_VTK /projects/birn/slicer/release-2002-03-01/slicer-vtk-3.2/

# Set your CVSROOT for checking out slicer through cvs
# This should be anonymous for nice external CVS access
# Make sure you are already logged in (cvs login) first!
setenv CVSROOT :pserver:anonymous@cvs.spl.harvard.edu:/projects/cvs/slicer


# --------------------------------------------------------------
#  End of variables to edit before running the tarup script.
# --------------------------------------------------------------

echo Slicer tarup script '$Revision: 1.18.2.1 $'...
echo Tcl path: $MY_TCL
echo Tk path: $MY_TK
echo Tcl/Tk version: $MY_VER_NUM
echo VTK path: $MY_VTK


# Get the latest source code from CVS.
echo Checking out slicer from CVS... with flags $CVS_FLAGS
cvs checkout $CVS_FLAGS slicer

# Make the installation directory
echo Moving to slicer install directory
mv slicer slicer-$MY_SLICER_VERSION
cd  slicer-$MY_SLICER_VERSION

# Make the tmp directory for use by MI registration
mkdir program/tmp
chmod 777 program/tmp

# Now copy things not in CVS into the install directory
echo Copying things not in CVS into the install directory
cp ${MY_OLD_SLICER}/program/loc.txt program
if (${BWH_INSTALL} == 1) then
    cp -rp ${MY_OLD_SLICER}/program/mi-bin program
endif
cp ${MY_OLD_SLICER}/servers/SignaSP/spl_server servers/SignaSP

# Now copy Tcl, Tk, and VTK stuff into the install directory
echo Copying tcl and tk binaries
cp ${MY_TCL}/unix/libtcl*.so lib
cp ${MY_TK}/unix/libtk*.so lib

echo Copying tcl and tk library directories
mkdir lib/tcl${MY_VER_NUM}
mkdir lib/tk${MY_VER_NUM}
cp -r ${MY_TCL}/library/* lib/tcl${MY_VER_NUM}
cp -r ${MY_TK}/library/* lib/tk${MY_VER_NUM}

echo Copying vtk binaries
ls -l ${MY_VTK}/*/*.so 
cp ${MY_VTK}/*/*.so lib
# in case we have multiple local directories make sure we get the right one
cp ${MY_VTK}/local/*.so lib

echo Copying vtk executable
cp ${MY_VTK}/tcl/vtk program

echo Copying tclsh
cp ${MY_TCL}/unix/tclsh program

echo Finished.  
echo Please change SLICER_HOME in the slicer script when you install. 
echo For SPL versions, dont forget to make sure logging works.
echo For nightly versions, change the slicer-nightly link in /local/bin to point here.

echo To tar it up:
echo tar --create --exclude=CVS --file slicer${MY_SLICER_VERSION}.tar slicer-${MY_SLICER_VERSION}
echo gzip slicer-${MY_SLICER_VERSION}.tar 
